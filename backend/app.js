const express = require('express');
const mongoose = require('mongoose');
const multer = require('multer');
const axios = require('axios');
const { Configuration, OpenAIApi } = require('openai');
const fs = require('fs');
require('dotenv').config();
const OpenAI = require('openai');

const connectToMongoDB = require('./database');

connectToMongoDB();

const app = express();
app.use(express.json());

// Set up OpenAI configuration with your API key
const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY,
});

// POST route to get a response from OpenAI
app.post('/refine', async (req, res) => {
    try {
      const { originalText } = req.body;
  
      // Construct the pre-prompt
      const prePrompt = `Refine this script to fix any errors while keeping the original content and meaning. This text was generated by a speech-to-text model:\n\n"${originalText}"`;
  
      const response = await openai.chat.completions.create({
        model: 'gpt-4-turbo',
        messages: [{ role: 'user', content: prePrompt }],
      });
  
      res.json({ refinedText: response.choices[0].message.content.trim() });
    } catch (error) {
      console.error(error);
      res.status(500).send('Something went wrong');
    }
  });

// Start the server
const PORT = 8000;
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});
